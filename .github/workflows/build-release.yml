name: Build release (main)

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    name: Build release (CI)
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Install/Build-Release.ps1 in CI mode
        run: Install/Build-Release.ps1 -CI
        shell: powershell
      
      - uses: actions/upload-artifact@v1
        with:
          name: release-package
          path: release

  create-release:
    name: Create release
    runs-on: ubuntu-18.04
    needs: [build-release]
    env:
      SHA8: ${GITHUB_SHA::8}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: release-package
          path: release-package

      - name: ZIP release package
        uses: thedoctor0/zip-release@master
        with:
          filename: 'release-package.zip'
          path: release-package

      - name: Read package.json
        uses: culshaw/read-package-node-version-actions@v1
        id: package-node-version


      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%d-%m-%Y')"

      - uses: cschleiden/replace-tokens@v1
        with:
          files: '[".github/RELEASE_TEMPLATE.md"]'
        env:
          VERSION: ${{ steps.package-node-version.outputs.version }}
          RELEASE_DATE: ${{ steps.date.outputs.date }}

      - name: Create GitHub release
        id: create-github-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: '.github/RELEASE_TEMPLATE.md'
          draft: true
          prerelease: false

      - name: Upload release package
        id: upload-release-package 
        uses: actions/upload-release-package@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-github-release.outputs.upload_url }}
          asset_path: ./release-package.zip
          asset_name: "pp365-${{ steps.package-node-version.outputs.version }}.zip"
          asset_content_type: application/zip

      - name: Slack notification
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              username: 'action-slack',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `A draft release of v${{ steps.package-node-version.outputs.version }} is ready at ${{ steps.create-github-release.outputs.html_url }}. Add the release notes and publish!`,
              }]
            }
